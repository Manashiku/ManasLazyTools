//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManaLazyTool.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ManaLazyTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;m_ShaderSettings&quot;: {
        ///    &quot;m_Header&quot;: [
        ///      &quot;This is the first line of your header, write what you&apos;d normally write but without the //&quot;
        ///    ],
        ///    &quot;m_Categories&quot;: {
        ///      &quot;MainCategory&quot;: {
        ///        &quot;m_CategoryIndex&quot;: 0,
        ///        &quot;m_CategoryHeader&quot;: [
        ///          &quot;here you could write the header for the specific category&quot;
        ///        ],
        ///        &quot;m_CategoryMapping&quot;: [
        ///          &quot;_ParameterName1&quot;,
        ///          &quot;_ParameterName2&quot;
        ///        ],
        ///        &quot;m_ParameterOverride&quot;: {
        ///          &quot;_ParameterName1&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultShaderOverride {
            get {
                return ResourceManager.GetString("DefaultShaderOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hoyodiscord_light {
            get {
                object obj = ResourceManager.GetObject("hoyodiscord_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hoyogithub_light {
            get {
                object obj = ResourceManager.GetObject("hoyogithub_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hoyotoon {
            get {
                object obj = ResourceManager.GetObject("hoyotoon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hoyotoonicon {
            get {
                object obj = ResourceManager.GetObject("hoyotoonicon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ManaThumbs {
            get {
                object obj = ResourceManager.GetObject("ManaThumbs", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ManaWave {
            get {
                object obj = ResourceManager.GetObject("ManaWave", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;m_ShaderSettings&quot;: {
        ///    &quot;m_Header&quot;: [
        ///      &quot;This is the first line of your header, write what you&apos;d normally write but without the //&quot;
        ///    ],
        ///    &quot;m_Categories&quot;: {
        ///      &quot;MainCategory&quot;: {
        ///        &quot;m_CategoryIndex&quot;: 0,
        ///        &quot;m_CategoryHeader&quot;: [
        ///          &quot;here you could write the header for the specific category&quot;
        ///        ],
        ///        &quot;m_CategoryMapping&quot;: [
        ///          &quot;_ParameterName1&quot;,
        ///          &quot;_ParameterName2&quot;
        ///        ],
        ///        &quot;m_ParameterOverride&quot;: {
        ///          &quot;_ParameterName1&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ShinyColors {
            get {
                return ResourceManager.GetString("ShinyColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap twitter_white {
            get {
                object obj = ResourceManager.GetObject("twitter_white", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
